definitions:
  models.Token:
    properties:
      token:
        type: string
    type: object
  models.UpdateSelf:
    properties:
      avatar:
        type: string
      bio:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      public:
        type: boolean
      username:
        type: string
    type: object
  models.User:
    properties:
      avatar:
        type: string
      bio:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      public:
        type: boolean
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    get:
      description: returns `Hello World`
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Hello World Route
      tags:
      - default
  /auth/self:
    get:
      description: Returns the authenticated user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get Authenticated User
      tags:
      - self
    post:
      description: Creates a new user
      parameters:
      - description: update params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSelf'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Add New Authenticated User
      tags:
      - self
    put:
      description: updates the authenticated user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Updates the Authenticated User
      tags:
      - self
  /auth/users:
    get:
      description: Returns a list of all users
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get All Users
      tags:
      - user
  /auth/users/:id:
    get:
      description: Returns a user object
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get a User by ID
      tags:
      - user
  /auth/utils/username:
    get:
      description: Checks if a username is available
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Is a Username Available
      tags:
      - utils
  /health:
    get:
      description: get the database health
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Returns the database health
      tags:
      - default
  /login:
    post:
      description: Logs in a user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
      summary: Login Route
      tags:
      - auth
  /register:
    post:
      description: Register a new user
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register Route
      tags:
      - auth
swagger: "2.0"
